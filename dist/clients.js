/*! For license information please see clients.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/js/utils.js":(e,t,n)=>{n.r(t),n.d(t,{authorizedUserCheck:()=>s,checkUserData:()=>c,disableFormButton:()=>o,formatDate:()=>m,logout:()=>l,redirectToHome:()=>u,toggleInputWarning:()=>r,unauthorizedUserCheck:()=>i,userFinder:()=>a});let o=function(e,t){t.disabled=!e.checkValidity()},r=function(e,t){let n=document.querySelector(t).querySelector(".text-warning");e.checkValidity()?n.classList.remove("show"):n.classList.add("show")};const a=function(e){let t=JSON.parse(localStorage.getItem("users")),n=t.findIndex((t=>t.email===e));return-1===n?-1:t[n]};let c=function(e,t){let n=a(e);if(-1!==n)return n.password===t},l=function(){document.querySelector(".btn-logout").addEventListener("click",(function(){localStorage.removeItem("active-user"),d()}))},i=function(){setTimeout((function(){null===localStorage.getItem("active-user")&&d()}),1)},s=function(){setTimeout((function(){null!==localStorage.getItem("active-user")&&u()}),1)},u=function(){window.location.replace("./home.html")},d=function(){window.location.replace("./index.html")};function m(e){let t=e.getDate();t<10&&(t="0"+t);let n=e.getMonth()+1;n<10&&(n="0"+n);let o=e.getFullYear();return o<10&&(o="0"+o),t+"."+n+"."+o}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{n.r(o);var e=n("./src/js/utils.js");(0,e.logout)();(async function(){const e=await fetch("https://gist.githubusercontent.com/oDASCo/3f4014d24dc79e1e29b58bfa96afaa1b/raw/677516ee3bd278f7e3d805108596ca431d00b629/db.json",{method:"GET",headers:{"Accept-Language":"en-US,ge"}});console.log("Response Headers",e.headers.get("expires"),e.headers.get("content-type")),console.log(e.ok);const t=await e.json();return Promise.resolve(t)})().then((t=>{console.log("Users",t);let n=document.querySelector("tbody"),o=0,r=0;for(const a of t){let t=document.createElement("tr");t.classList.add("table-row"),n.append(t);let c=document.createElement("td"),l=document.createElement("td"),i=document.createElement("td"),s=document.createElement("td"),u=document.createElement("td"),d=document.createElement("td"),m=new Date(a.registered.substr(0,10));c.innerHTML=a.name,l.innerHTML=a.company,i.innerHTML=a.email,s.innerHTML=a.phone,u.innerHTML=a.balance,d.innerHTML=(0,e.formatDate)(m),t.append(c),t.append(l),t.append(i),t.append(s),t.append(u),t.append(d),a.isActive||(t.style.background="gray"),"male"===a.gender?o+=1:"female"===a.gender&&(r+=1)}document.querySelector(".male__users").innerHTML=String(o),document.querySelector(".female__users").innerHTML=String(r)})),(0,e.unauthorizedUserCheck)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,