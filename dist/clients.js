/*! For license information please see clients.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/js/api/users.js":(e,t,n)=>{n.r(t),n.d(t,{fetchUsers:()=>o});async function o(){const e=await fetch("https://gist.githubusercontent.com/oDASCo/3f4014d24dc79e1e29b58bfa96afaa1b/raw/677516ee3bd278f7e3d805108596ca431d00b629/db.json",{method:"GET",headers:{"Accept-Language":"en-US,ge"}});return await e.json()}},"./src/js/utils.js":(e,t,n)=>{n.r(t),n.d(t,{createConfirmationModal:()=>p,createDeleteRowButton:()=>s,createSpecifiedDomElement:()=>l,disableFormButton:()=>r,extractRegistrationDateFromUser:()=>b,getMaxOfArray:()=>i,onCancel:()=>m,onConfirm:()=>u,redirectToHome:()=>c,redirectToLogin:()=>d,showNotification:()=>f,toggleInputWarning:()=>a});const o=document.querySelector("body");document.querySelector(".modal");const r=function(e,t){t.disabled=!e.checkValidity()},a=function(e,t){let n=document.querySelector(t).querySelector(".text-warning");e.checkValidity()?n.classList.remove("show"):n.classList.add("show")};let c=function(){return window.location.replace("./home.html")},d=function(){return window.location.replace("./index.html")};function i(e){return Math.max.apply(null,e)}function l(e,t,n){let o=document.createElement(e);return o.classList.add(t),o.innerHTML=n,o}const s=()=>{const e=l("button","btn","Delete");return e.classList.add("btn-danger"),e},u=()=>{let e=document.querySelector(".modal"),t=document.querySelector(".btn-danger");e.classList.remove("show"),e.remove(),t.parentElement.remove(),f("Client successfully deleted!")},m=()=>{document.querySelector(".modal").remove()};function p(e){let{onConfirm:t,onCancel:n}=e,r=l("div","modal","");r.classList.add("show");let a=l("h4","modal-header","Confirmation"),c=l("p","modal-body","Are you sure you want to delete?"),d=l("div","modal-footer",""),i=l("button","btn","Delete");i.classList.add("btn-danger","btn__delete"),i.addEventListener("click",(function(){t()}));let s=l("button","btn","Cancel");s.classList.add("btn-secondary","btn__cancel"),s.addEventListener("click",(function(){n()})),r.append(a),r.append(c),r.append(d),d.append(i),d.append(s),o.append(r)}function f(e){let t=document.createElement("div");t.classList.add("badge");let n=l("h4","notification__header",e);t.append(n);let r=document.createElement("button");t.append(r),r.classList.add("btn","btn-close"),r.addEventListener("click",(function(){t.remove()})),o.append(t),setTimeout((()=>t.remove()),5e3),document.querySelectorAll(".badge").length>1&&document.querySelector(".badge").remove()}const b=function(e,t){return new Date(e.substring(0,t))}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{n.r(o);var e=n("./src/js/api/users.js"),t=n("./src/js/utils.js");document.querySelector(".go__up").addEventListener("click",(function(){window.scrollTo(0,0)}));let r=0,a=0,c=[];const d=function(e,t){e||(t.style.background="gray")},i=function(e){if("male"===e)return r+=1,r},l=function(e){if("female"===e)return a+=1,a};document.addEventListener("DOMContentLoaded",(function(){(0,e.fetchUsers)().then((e=>{let n=document.querySelector("tbody");for(const r of e){let e=document.createElement("tr");e.classList.add("table__row");const a=(0,t.extractRegistrationDateFromUser)(r.registered,10),s=(0,t.createDeleteRowButton)();let u=(0,t.createSpecifiedDomElement)("td","user__name",r.name),m=(0,t.createSpecifiedDomElement)("td","user__company",r.company),p=(0,t.createSpecifiedDomElement)("td","user__email",r.email),f=(0,t.createSpecifiedDomElement)("td","user__phone",r.phone),b=(0,t.createSpecifiedDomElement)("td","user__balance",r.balance),y=(0,t.createSpecifiedDomElement)("td","user__registration-date",a.toLocaleDateString()),g=r.gender,S=r.isActive;n.append(e),e.append(u),e.append(m),e.append(p),e.append(f),e.append(b),e.append(y),e.append(s),s.addEventListener("click",(function(){(0,t.createConfirmationModal)({onCancel:t.onCancel,onConfirm:t.onConfirm})})),d(S,e),i(g),l(g),c.push((o=r.balance,parseFloat(o.substring(1).replace(",",""))))}var o;document.querySelector(".male__users").innerHTML=String(r),document.querySelector(".female__users").innerHTML=String(a),document.querySelector(".largest__balance").innerHTML="The largest amount on the client's account is $".concat((0,t.getMaxOfArray)(c),"!")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,