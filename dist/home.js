/*! For license information please see home.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/js/utils.js":(e,t,o)=>{o.r(t),o.d(t,{checkUserData:()=>a,disableFormButton:()=>r,isUserExist:()=>l,isUserLoggedIn:()=>c,logout:()=>i,redirectToHome:()=>s,toggleInputWarning:()=>n}),window.appUsers=[{email:"art@gmail.com",password:"123456"}];let r=function(e,t){t.disabled=!e.checkValidity()},n=function(e,t){let o=document.querySelector(t).querySelector(".text-warning");e.checkValidity()?o.classList.remove("show"):o.classList.add("show")},l=function(e){return localStorage.getItem("email")===e},a=function(e,t){if(!0===l(e))return localStorage.getItem("password")===t},i=function(){document.querySelector(".btn-logout").addEventListener("click",(function(){localStorage.clear(),window.location.replace("./index.html")}))},c=function(){setTimeout((function(){"logged-in"===localStorage.getItem("status")&&s()}),0)},s=function(){window.location.replace("./home.html")}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var l=t[r]={exports:{}};return e[r](l,l.exports,o),l.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{o.r(r),(0,o("./src/js/utils.js").logout)();const e=document.querySelector(".welcome__message");let t=navigator.userAgent,n=window.localStorage.getItem("email");e.innerHTML="Hello, <b>".concat(n,"</b>. </br> You are logged from ").concat(t)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,