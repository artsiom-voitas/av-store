/*! For license information please see sign-in.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/js/utils.js":(e,t,n)=>{n.r(t),n.d(t,{authorizedUserCheck:()=>u,checkUserData:()=>s,disableFormButton:()=>o,formatDate:()=>m,logout:()=>a,redirectToHome:()=>c,toggleInputWarning:()=>r,unauthorizedUserCheck:()=>l,userFinder:()=>i});let o=function(e,t){t.disabled=!e.checkValidity()},r=function(e,t){let n=document.querySelector(t).querySelector(".text-warning");e.checkValidity()?n.classList.remove("show"):n.classList.add("show")};const i=function(e){let t=JSON.parse(localStorage.getItem("users")),n=t.findIndex((t=>t.email===e));return-1===n?-1:t[n]};let s=function(e,t){let n=i(e);if(-1!==n)return n.password===t},a=function(){document.querySelector(".btn-logout").addEventListener("click",(function(){localStorage.removeItem("active-user"),d()}))},l=function(){setTimeout((function(){null===localStorage.getItem("active-user")&&d()}),1)},u=function(){setTimeout((function(){null!==localStorage.getItem("active-user")&&c()}),1)},c=function(){window.location.replace("./home.html")},d=function(){window.location.replace("./index.html")};function m(e){let t=e.getDate();t<10&&(t="0"+t);let n=e.getMonth()+1;n<10&&(n="0"+n);let o=e.getFullYear();return o<10&&(o="0"+o),t+"."+n+"."+o}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{n.r(o);var e=n("./src/js/utils.js");let t=document.forms["sign-in"],r=t.elements["user-email"],i=t.elements["user-password"],s=t.elements["authorization-button"];t.addEventListener("input",(function(){(0,e.disableFormButton)(this,s)})),r.addEventListener("change",(function(){(0,e.toggleInputWarning)(this,".input-email")})),i.addEventListener("change",(function(){(0,e.toggleInputWarning)(this,".input-password")})),t.addEventListener("submit",(function(t){t.preventDefault();let n=document.querySelector(".log-in");n.classList.remove("show"),n.innerHTML="";let o=r.value,s=i.value;if((0,e.userFinder)(o))!0===(0,e.checkUserData)(o,s)?(n.classList.remove("text-warning"),n.innerHTML="You are successfully logged in!",n.classList.add("show"),localStorage.setItem("active-user",o),setTimeout((()=>{(0,e.redirectToHome)()}),1e3)):(n.innerHTML="Oops, something wrong with yours email or password!",n.classList.add("text-warning"),n.classList.add("show"));else{let e=document.querySelector(".text-warning");e.innerHTML="A user with such email address does not exist",e.classList.add("show")}})),(0,e.authorizedUserCheck)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,