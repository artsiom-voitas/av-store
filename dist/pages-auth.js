/*! For license information please see pages-auth.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/js/auth/auth.js":(e,t,n)=>{n.r(t),n.d(t,{assignHandlerToLogoutButton:()=>d,checkUserData:()=>l,getExistingUser:()=>i,getParsedUserList:()=>s,getUsersFromLocalStorage:()=>r,isAuthorizedUser:()=>u,setActiveStatusToUser:()=>c,setUsersToLocalStorage:()=>a});var o=n("./src/js/utils.js");const r=function(){return localStorage.getItem("users")},a=function(e){return localStorage.setItem("users",JSON.stringify(e))},c=function(e){return localStorage.setItem("active-user",e)},s=function(){return JSON.parse(localStorage.getItem("users"))},i=function(e){let t=s().find((t=>t.email===e));if(void 0!==t)return t},l=function(e,t){return i(e).password===t},d=function(){document.querySelector(".btn-logout").addEventListener("click",(function(){localStorage.removeItem("active-user"),(0,o.redirectToLogin)()}))},u=()=>Boolean(localStorage.getItem("active-user"))},"./src/js/utils.js":(e,t,n)=>{n.r(t),n.d(t,{createConfirmationModal:()=>f,createDeleteRowButton:()=>d,createSpecifiedDomElement:()=>l,disableFormButton:()=>r,extractRegistrationDateFromUser:()=>p,getMaxOfArray:()=>i,onCancel:()=>m,onConfirm:()=>u,redirectToHome:()=>c,redirectToLogin:()=>s,showNotification:()=>g,toggleInputWarning:()=>a});const o=document.querySelector("body");document.querySelector(".modal");const r=function(e,t){t.disabled=!e.checkValidity()},a=function(e,t){let n=document.querySelector(t).querySelector(".text-warning");e.checkValidity()?n.classList.remove("show"):n.classList.add("show")};let c=function(){return window.location.replace("./home.html")},s=function(){return window.location.replace("./index.html")};function i(e){return Math.max.apply(null,e)}function l(e,t,n){let o=document.createElement(e);return o.classList.add(t),o.innerHTML=n,o}const d=()=>{const e=l("button","btn","Delete");return e.classList.add("btn-danger"),e},u=()=>{let e=document.querySelector(".modal"),t=document.querySelector(".btn-danger");e.classList.remove("show"),e.remove(),t.parentElement.remove(),g("Client successfully deleted!")},m=()=>{document.querySelector(".modal").remove()};function f(e){let{onConfirm:t,onCancel:n}=e,r=l("div","modal","");r.classList.add("show");let a=l("h4","modal-header","Confirmation"),c=l("p","modal-body","Are you sure you want to delete?"),s=l("div","modal-footer",""),i=l("button","btn","Delete");i.classList.add("btn-danger","btn__delete"),i.addEventListener("click",(function(){t()}));let d=l("button","btn","Cancel");d.classList.add("btn-secondary","btn__cancel"),d.addEventListener("click",(function(){n()})),r.append(a),r.append(c),r.append(s),s.append(i),s.append(d),o.append(r)}function g(e){let t=document.createElement("div");t.classList.add("badge");let n=l("h4","notification__header",e);t.append(n);let r=document.createElement("button");t.append(r),r.classList.add("btn","btn-close"),r.addEventListener("click",(function(){t.remove()})),o.append(t),setTimeout((()=>t.remove()),5e3),document.querySelectorAll(".badge").length>1&&document.querySelector(".badge").remove()}const p=function(e,t){return new Date(e.substring(0,t))}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{n.r(o);var e=n("./src/js/utils.js"),t=n("./src/js/auth/auth.js");document.addEventListener("DOMContentLoaded",(()=>{(0,t.isAuthorizedUser)()||(0,e.redirectToLogin)()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,