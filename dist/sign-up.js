/*! For license information please see sign-up.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/js/utils.js":(e,t,n)=>{n.r(t),n.d(t,{authorizedUserCheck:()=>u,checkUserData:()=>i,createConfirmationModal:()=>h,createSpecifiedDomElement:()=>g,disableFormButton:()=>r,formatDate:()=>p,getMaxOfArray:()=>f,logout:()=>l,notification:()=>v,redirectToHome:()=>d,toggleInputWarning:()=>a,unauthorizedUserCheck:()=>c,userFinder:()=>s});const o=document.querySelector("body");let r=function(e,t){t.disabled=!e.checkValidity()},a=function(e,t){let n=document.querySelector(t).querySelector(".text-warning");e.checkValidity()?n.classList.remove("show"):n.classList.add("show")};const s=function(e){let t=JSON.parse(localStorage.getItem("users")),n=t.findIndex((t=>t.email===e));return-1===n?-1:t[n]};let i=function(e,t){let n=s(e);if(-1!==n)return n.password===t},l=function(){document.querySelector(".btn-logout").addEventListener("click",(function(){localStorage.removeItem("active-user"),m()}))},c=function(){setTimeout((function(){null===localStorage.getItem("active-user")&&m()}),1)},u=function(){setTimeout((function(){null!==localStorage.getItem("active-user")&&d()}),1)},d=function(){window.location.replace("./home.html")},m=function(){window.location.replace("./index.html")};function p(e){let t=e.getDate();t<10&&(t="0"+t);let n=e.getMonth()+1;n<10&&(n="0"+n);let o=e.getFullYear();return o<10&&(o="0"+o),t+"."+n+"."+o}function f(e){return Math.max.apply(null,e)}function g(e,t,n){let o=document.createElement(e);return o.classList.add(t),o.innerHTML=n,o}function h(){let e=g("div","modal",""),t=g("h4","modal-header","Confirmation"),n=g("p","modal-body","Are you sure you want to delete?"),r=g("div","modal-footer",""),a=g("button","btn","Delete");a.classList.add("btn-danger","btn__delete");let s=g("button","btn","Cancel");s.classList.add("btn-secondary","btn__cancel"),e.append(t),e.append(n),e.append(r),r.append(a),r.append(s),o.append(e)}function v(e){let t=document.createElement("div");t.classList.add("badge");let n=g("h4","notification__header",e);t.append(n);let r=document.createElement("button");t.append(r),r.classList.add("btn","btn-close"),r.addEventListener("click",(function(){t.remove()})),o.append(t)}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{n.r(o);var e=n("./src/js/utils.js");let t=document.forms["sign-up"],r=t.elements["new-user-email"],a=t.elements["new-user-password"],s=t.elements["confirm-password"],i=t.elements["sign-up-button"];t.addEventListener("input",(function(){(0,e.disableFormButton)(this,i)})),r.addEventListener("change",(function(){(0,e.toggleInputWarning)(this,".input-email")})),a.addEventListener("change",(function(){(0,e.toggleInputWarning)(this,".input-password")})),t.addEventListener("submit",(function(t){t.preventDefault();let n=document.querySelector(".text-warning"),o=document.querySelector(".confirm-password"),i=document.querySelector(".registered");i.classList.remove("show"),i.innerHTML="";let l=r.value,c=a.value,u=s.value;if(-1!==(0,e.userFinder)(l))n.innerHTML="A user with the same email already exists. Try to Sign In",n.classList.add("show");else if(n.innerHTML="The email address is incorrect. Please retry...",n.classList.remove("show"),u===c){i.classList.add("show"),o.classList.remove("show");let e=JSON.parse(localStorage.getItem("users"));e.push({email:r.value,password:a.value}),localStorage.setItem("users",JSON.stringify(e)),i.innerHTML="You are successfully Signed Up!",setTimeout((()=>{window.location.replace("./index.html")}),2e3)}else o.classList.add("show")})),(0,e.authorizedUserCheck)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,